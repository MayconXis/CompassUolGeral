"Test Case Name","Test Step","Expected Result"
"Cenário 35: POST Cadastrar usuário dinâmico","Criar um usuário com dados dinâmicos.","O usuário é criado com sucesso, retornando o status code 201 e a mensagem 'Cadastro realizado com sucesso'."
"Cenário 36: POST Login usuário dinâmico","Realizar login com um usuário dinâmico e validar a resposta.","O login é bem-sucedido, retornando o status code 200 e a mensagem 'Login realizado com sucesso'."
"Cenário 37: POST Criar produto com token de administrador","Criar um usuário administrador, logar para obter um token e criar um produto com dados dinâmicos usando o token.","O produto é criado com sucesso, retornando o status code 201 e a mensagem 'Cadastro realizado com sucesso'."
"Cenário 38: POST Adicionar e Criar carrinho completo dinâmico","Criar um usuário admin, um produto dinâmico e depois criar um carrinho com esse produto.","O carrinho é criado com sucesso, retornando o status code 201 e a mensagem 'Cadastro realizado com sucesso'."
"Cenário 39: POST Registro com email existente dinâmico","Criar um usuário dinâmico e, em seguida, tentar criar um segundo usuário com o mesmo email.","O sistema retorna o status code 400 e a mensagem 'Este email já está sendo usado'."
"Cenário 40: POST Múltiplos logins com senha incorreta dinâmico","Criar um usuário dinâmico e tentar logar várias vezes com a senha errada.","Cada tentativa de login falha, retornando o status code 401 e a mensagem 'Email e/ou senha inválidos'."
"Cenário 41: POST Login com credenciais inválidas dinâmico","Tentar realizar login com um email e senha que não existem no sistema.","O login falha, retornando o status code 401 e a mensagem 'Email e/ou senha inválidos'."
"Cenário 42: POST Registro com nome de produto duplicado dinâmico","Criar um produto dinamicamente e tentar criar um segundo produto com o mesmo nome.","O sistema retorna o status code 400 e a mensagem 'Já existe produto com esse nome'."
"Cenário 43: POST Registro com preço negativos dinâmico","Tentar criar um produto com o campo 'preco' com um valor negativo.","O sistema retorna o status code 400 e a mensagem 'preco deve ser um número positivo'."
"Cenário 44: POST Registro com quantidade negativa dinâmico","Tentar criar um produto com o campo 'quantidade' com um valor negativo.","O sistema retorna o status code 400 e a mensagem 'quantidade deve ser maior ou igual a 0'."
"Cenário 45: POST Acesso a rota protegida sem token dinâmico","Tentar criar um produto sem fornecer um token de autenticação.","O sistema retorna o status code 401 e a mensagem 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'."
"Cenário 46: GET Listar usuários dinâmico","Realizar uma requisição GET para o endpoint de usuários.","A requisição é bem-sucedida, retornando o status code 200 e uma lista de usuários."
"Cenário 47: GET Obter usuário por ID válido dinâmico","Criar um usuário dinâmico e, em seguida, buscar por seu ID recém-criado.","O sistema encontra o usuário, retornando o status code 200 e os dados do usuário correspondente."
"Cenário 48: GET Obter usuário por ID inválido dinâmico","Tentar buscar um usuário utilizando um ID inválido (formato incorreto).","A busca falha, retornando o status code 400 e a mensagem 'id deve ter exatamente 16 caracteres alfanuméricos'."
"Cenário 49: PUT Atualizar produto com preco negativo dinâmico","Criar um produto e tentar atualizá-lo com um valor de preço negativo.","A atualização falha, retornando o status code 400 e a mensagem 'preco deve ser um número positivo'."
"Cenário 50: PUT Atualizar produto com quantidade negativa dinâmico","Criar um produto e tentar atualizá-lo com um valor de quantidade negativo.","A atualização falha, retornando o status code 400 e a mensagem 'quantidade deve ser maior ou igual a 0'."
"Cenário 51: PUT Atualizar produto sem token dinamico","Criar um produto e tentar atualizá-lo sem fornecer um token.","A atualização falha, retornando o status code 401 e a mensagem 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'."
"Cenário 52: PUT Atualizar usuario com email duplicado dinamico","Criar dois usuários dinâmicos e tentar atualizar o email do primeiro com o email do segundo.","A atualização falha, retornando o status code 400 e a mensagem 'Este email já está sendo usado'."
"Cenário 53: PUT Atualizar produto com nome duplicado dinâmico","Criar dois produtos dinâmicos e tentar atualizar o nome do segundo com o nome do primeiro.","A atualização falha, retornando o status code 400 e a mensagem 'Já existe produto com esse nome'."
"Cenário 54: DELETE Excluir usuário dinâmico","Criar um usuário, obter um token de administrador e excluir o usuário recém-criado.","O usuário é excluído com sucesso, retornando o status code 200 e a mensagem 'Registro excluído com sucesso'."
"Cenário 55: DELETE Excluir produto dinâmico","Criar um produto, obter um token de administrador e excluir o produto recém-criado.","O produto é excluído com sucesso, retornando o status code 200 e a mensagem 'Registro excluído com sucesso'."
"Cenário 56: DELETE Concluir compra do carrinho dinâmico","Criar um usuário admin, criar um produto, adicionar ao carrinho e concluir a compra.","A compra é concluída com sucesso, retornando o status code 200 e a mensagem 'Registro excluído com sucesso'."
"Cenário 57: DELETE Cancelar compra do carrinho dinâmico","Criar um usuário admin, criar um produto, adicionar ao carrinho e cancelar a compra.","A compra é cancelada com sucesso, retornando o status code 200 e a mensagem 'Registro excluído com sucesso. Estoque dos produtos reabastecido'."
"Cenário 01: POST Cadastrar usuário comum estático","Realizar uma requisição POST com dados estáticos para criar um usuário comum.","O usuário é criado com sucesso, retornando o status code 201 e a mensagem 'Cadastro realizado com sucesso'."
"Cenário 02: POST Cadastrar usuário admin estático","Realizar uma requisição POST com dados estáticos para criar um usuário admin.","O usuário admin é criado com sucesso, retornando o status code 201 e a mensagem 'Cadastro realizado com sucesso'."
"Cenário 03: POST Cadastrar usuário com email existente estático","Tentar criar um usuário usando um email que já está cadastrado.","A requisição falha, retornando o status code 400 e a mensagem 'Este email já está sendo usado'."
"Cenário 04: POST Login com credenciais válidas estático","Realizar uma requisição POST com email e senha válidos.","O login é bem-sucedido, retornando o status code 200 e a mensagem 'Login realizado com sucesso'."
"Cenário 05: POST Login com credenciais inválidas estático","Tentar realizar login com um email ou senha que não correspondem a um usuário existente.","O login falha, retornando o status code 401 e a mensagem 'Email e/ou senha inválidos'."
"Cenário 06: POST Múltiplos logins incorretos estático","Tentar logar várias vezes com a mesma credencial de usuário, mas com senhas diferentes e incorretas.","Cada tentativa de login falha, retornando o status code 401 e a mensagem 'Email e/ou senha inválidos'."
"Cenário 07: POST Criar produto com dados estáticos","Fazer login como admin para obter um token e criar um novo produto com dados fixos.","O produto é criado com sucesso, retornando o status code 201 e a mensagem 'Cadastro realizado com sucesso'."
"Cenário 08: POST Criar produto duplicado estático","Tentar criar um produto com um nome que já existe no sistema.","A criação do produto falha, retornando o status code 400 e a mensagem 'Já existe produto com esse nome'."
"Cenário 09: POST Criar produto com preço negativo estático","Tentar criar um produto com o campo 'preco' com um valor negativo.","A criação do produto falha, retornando o status code 403 e a mensagem de erro no campo 'preco'."
"Cenário 10: POST Criar produto com quantidade negativa estático","Tentar criar um produto com o campo 'quantidade' com um valor negativo.","A criação do produto falha, retornando o status code 400 e a mensagem de erro no campo 'quantidade'."
"Cenário 11: POST Criar produto sem token estático","Tentar criar um produto sem incluir o token de autorização.","A requisição falha, retornando o status code 401 e a mensagem 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'."
"Cenário 12: POST Criar carrinho com dados estáticos","Criar um usuário, um produto, fazer login para obter um token e criar um carrinho com o produto.","O carrinho é criado com sucesso, retornando o status code 201 e a mensagem 'Cadastro realizado com sucesso'."
"Cenário 13: GET Listar usuários estático","Realizar uma requisição GET para o endpoint de usuários.","A requisição é bem-sucedida, retornando o status code 200 e a lista de usuários."
"Cenário 14: GET Obter usuário por ID válido estático","Criar um usuário e buscar por seu ID para validar o retorno dos dados.","A requisição é bem-sucedida, retornando o status code 200 e os dados do usuário correspondente."
"Cenário 15: GET Obter usuário por ID inválido estático","Tentar buscar um usuário utilizando um ID que não tem o formato alfanumérico correto.","A requisição falha, retornando o status code 400 e a mensagem 'id deve ter exatamente 16 caracteres alfanuméricos'."
"Cenário 16: GET Listar produtos estático","Realizar uma requisição GET para o endpoint de produtos.","A requisição é bem-sucedida, retornando o status code 200 e a lista de produtos."
"Cenário 17: GET Obter produto por ID válido estático","Criar um produto e buscar por seu ID para validar o retorno dos dados.","A requisição é bem-sucedida, retornando o status code 200 e os dados do produto correspondente."
"Cenário 18: GET Obter produto por ID inválido estático","Tentar buscar um produto utilizando um ID que não tem o formato alfanumérico correto.","A requisição falha, retornando o status code 400 e a mensagem 'id deve ter exatamente 16 caracteres alfanuméricos'."
"Cenário 19: GET Listar carrinhos estático","Realizar uma requisição GET para o endpoint de carrinhos.","A requisição é bem-sucedida, retornando o status code 200 e a lista de carrinhos."
"Cenário 21: GET Produto com ID não encontrado estático","Tentar buscar um produto com um ID válido, mas que não está no banco de dados.","A busca falha, retornando o status code 400 e a mensagem 'id deve ter exatamente 16 caracteres alfanuméricos'."
"Cenário 22: PUT Atualizar usuário estático","Criar um usuário e atualizá-lo com novos dados estáticos.","A atualização é bem-sucedida, retornando o status code 200 e a mensagem 'Registro alterado com sucesso'."
"Cenário 23: PUT Atualizar produto estático","Criar um produto e atualizá-lo com novos dados estáticos.","A atualização é bem-sucedida, retornando o status code 200 e a mensagem 'Registro alterado com sucesso'."
"Cenário 24: PUT Atualizar produto sem alterar dados estático","Criar um produto e realizar uma requisição PUT com os mesmos dados originais.","A requisição é bem-sucedida, retornando o status code 200 e a mensagem 'Registro alterado com sucesso'."
"Cenário 25: PUT Atualizar produto com preco negativo estatico","Criar um produto e tentar atualizá-lo com um valor de preço negativo.","A atualização falha, retornando o status code 400 e a mensagem de erro no campo 'preco'."
"Cenário 26: PUT Atualizar produto com quantidade negativa estatico","Criar um produto e tentar atualizá-lo com um valor de quantidade negativo.","A atualização falha, retornando o status code 400 e a mensagem de erro no campo 'quantidade'."
"Cenário 27: PUT Atualizar produto sem token estatico","Tentar atualizar um produto sem incluir o token de autorização.","A requisição falha, retornando o status code 401 e a mensagem 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'."
"Cenário 28: PUT Atualizar usuario com email duplicado estatico","Tentar atualizar o email de um usuário para um email que já está cadastrado por outro usuário.","A atualização falha, retornando o status code 400 e a mensagem 'Este email já está sendo usado'."
"Cenário 29: PUT Atualizar produto com nome duplicado estatico","Tentar atualizar o nome de um produto para um nome já existente no sistema.","A atualização falha, retornando o status code 400 e a mensagem 'Já existe produto com esse nome'."
"Cenário 30: DELETE Excluir produto estático","Criar um produto e excluí-lo usando o seu ID e um token de administrador.","O produto é excluído com sucesso, retornando o status code 200 e a mensagem 'Registro excluído com sucesso'."
"Cenário 31: DELETE Cancelar compra do carrinho estático","Criar um carrinho com um produto e depois cancelar a compra.","A compra é cancelada com sucesso, o carrinho é removido e o estoque do produto é reabastecido."
"Cenário 32: DELETE Concluir compra do carrinho estático","Criar um carrinho com um produto e depois concluir a compra.","A compra é concluída com sucesso, retornando o status code 200 e a mensagem 'Registro excluído com sucesso'."
"Cenário 33: DELETE Excluir usuario estatico","Criar um usuário admin e excluí-lo utilizando seu ID e um token válido.","O usuário é excluído com sucesso, retornando o status code 200 e a mensagem 'Registro excluído com sucesso'."
"Cenário 34: DELETE Excluir produto com ID de usuário estático","Tentar excluir um produto com o ID de um usuário, usando o token de um administrador.","A exclusão falha, retornando o status code 403 e a mensagem 'Rota exclusiva para administradores'."
"Cenario 01 banco de dados: Adicionar Novo Usuario ao Banco JSON","Adicionar um novo usuário ao banco de dados JSON e verificar se ele foi encontrado.","O usuário é adicionado e encontrado com sucesso no banco de dados."
"Cenario 02 banco de dados: Contar Usuarios no Banco","Contar o número total de usuários no banco JSON.","A contagem de usuários é maior ou igual a 3."
"Cenario 03 banco de dados: Validar Estrutura dos Bancos JSON","Validar a estrutura dos bancos de dados JSON de usuários, endpoints e status codes.","Todas as estruturas dos arquivos JSON são validadas com sucesso."
"Cenario 04 banco de dados: Testar Busca de Usuario Inexistente","Tentar buscar um usuário por um email que não existe no banco.","Um erro é retornado, indicando que o usuário não foi encontrado."
"Cenario 05 banco de dados: Adicionar e Remover Usuario Dinamicamente","Adicionar um usuário temporário, verificar se a contagem aumenta e depois remover, verificando se a contagem volta ao normal.","O usuário é adicionado e removido com sucesso, e a contagem de usuários é restaurada corretamente."
"Cenario 06 banco de dados: Testar Todos os Usuarios do Banco Dinamicamente","Carregar todos os usuários do banco de dados e iterar sobre eles, validando se os campos necessários não estão vazios.","Todos os usuários são validados com sucesso, com seus campos obrigatórios preenchidos e no formato correto."